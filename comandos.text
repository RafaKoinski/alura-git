git init = Inicia um repositório git naquela pasta;
git init --bare = Indica que o repositório é puro, usado (apenas para controle de versões)
git statys = Mostra algumas informações do status do repositório;
git add = Adiciona o arquivo ao repositório do git, podemos escrever o nome do arquivo ou apenas colocar um "." e ele adiciona todos os arquivos;
git config = podemos alterar as configurações do repositório, sendo "--local" para este repositório apenas ou "--global" que são para todos do PC;
git branch -m master main = muda o nome do repositório de master para main.
git commit = Salva as alterações feitas no repositório. "-m" para adicionar uma mensagem ou titulo no save;
git log = Mostra histórico de alterações no repositório;
git log -p = Mostra histórico de alterações no repositório com mais detalhes, podemos usar as setas para rolar as informações e voltamos a linha de comando precionando o botão "q" do teclado;
git log --online = Mostra histórico de alterações no repositório em uma linha;
git log cheatsheet = Site para mostrar histórico de alterações no repositório personalizado;
.gitignore = vai ignorar tudo que vc colocar la dentro, desde um arquivo a toda uma pasta, basta apenas criar este arquivo com esse nome e  colocar os nomes de pastas e arquivo que desejamos que o git ignore.
git push manda para outro repositório enquanto git pull puxa;
git branch = cria uma nova branch, ou seja, um novo ramo de trabalho;
git checkout = Muda o ramo de atuação;
git checkout -b <Nome da branch> = Cria uma nova branch e já muda de ramo de atuação;
git merge <Nome da branch> = Traz os commits daquela branch;
git rebase <Nome da branch> = Traz os commits daquela branch antes do último commit de sua branch atual;

rebase pode ser útil para "limpar" linhas do tempo de repositórios que se tornaram muito poluídas pelo excesso de merging e branching;
Se você quer preservar o histórico completo do projeto, independente da complexidade, use sempre merge;
merge é mais indicado para trabalhos com branches compartilhadas, onde há várias pessoas envolvidas alterando diversas branches;
rebase é mais indicado para projetos pessoais, times pequenos ou projetos mais simples.

Sempre que fazemos uma alteração e queremos salvar, devemos primeiro adicionar e depois commitar;